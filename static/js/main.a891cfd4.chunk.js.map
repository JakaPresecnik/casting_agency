{"version":3,"sources":["logo.svg","auth/LogoutButton.js","components/Nav.js","components/NoMatch.js","components/Home.js","components/Movies.js","components/Actors.js","components/NewMovie.js","components/NewActor.js","components/UpdateActor.js","components/UpdateMovie.js","App.js","reportWebVitals.js","index.js"],"names":["LogoutButton","useAuth0","isAuthenticated","logout","onClick","returnTo","window","location","origin","Nav","user","loginWithRedirect","to","exact","activeClassName","className","src","picture","alt","name","redirect_uri","NoMatch","Home","formatDate","date","releaseDate","Date","weekDay","getDay","monthDay","getDate","month","getMonth","year","getFullYear","Movies","getAccessTokenSilently","useState","data","setData","token","setToken","deleted","setDeleted","page","setPage","useEffect","a","audience","fetch","headers","Authorization","res","json","resData","console","log","deleteMovie","id","method","success","e","error","message","pathname","query","movies","map","movie","title","release_date","pageNumbers","maxPage","Math","ceil","length","i","push","createPagination","Actors","deleteActor","actors","actor","age","gender","NewMovie","props","setTitle","setReleaseDate","handleSubmit","preventDefault","body","JSON","stringify","new_movie","onSubmit","htmlFor","onChange","target","value","onChangeTitle","type","placeholder","onChangeDate","disabled","NewActor","setName","setAge","setGender","new_actor","onChangeName","onChangeAge","onChangeGender","UpdateActor","updated_actor","UpdateMovie","updated_movie","App","isLoading","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","domain","clientId","redirectUri","document","getElementById"],"mappings":"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","file":"static/js/main.a891cfd4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\nimport { useAuth0 } from '@auth0/auth0-react';\r\n\r\nfunction LogoutButton() {\r\n  const {\r\n    isAuthenticated,\r\n    logout,\r\n  } = useAuth0();\r\n\r\n  return isAuthenticated && (\r\n    <button onClick={() => {\r\n      logout({ returnTo: window.location.origin });\r\n    }}>Log out</button>\r\n  );\r\n}\r\n\r\nexport default LogoutButton;","import { NavLink } from 'react-router-dom';\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\nimport LogoutButton from '../auth/LogoutButton';\r\n\r\nfunction Nav () {\r\n    const {\r\n        user,\r\n        isAuthenticated,\r\n        loginWithRedirect,\r\n      } = useAuth0();\r\n      \r\n    return (\r\n        <nav>\r\n            <ul>\r\n                <NavLink to='/casting_agency' exact activeClassName=\"selected\"><li>Home</li></NavLink>\r\n                {isAuthenticated && (\r\n                    <NavLink to='/casting_agency/movies' activeClassName=\"selected\"><li>Movies</li></NavLink>\r\n                )}\r\n                {isAuthenticated && (\r\n                    <NavLink to='/casting_agency/actors' activeClassName=\"selected\"><li>Actors</li></NavLink>\r\n                )}\r\n            </ul>\r\n            <div className='dropdown' >\r\n                {isAuthenticated && <img className='dropdown-pic' src={user.picture} alt= {`Avatar of ${user.name}`} />}\r\n                <div className=\"dropdown-content\">\r\n                    {!isAuthenticated ? \r\n                    <button onClick={() => loginWithRedirect({\r\n                        redirect_uri: window.location.origin + '/casting_agency'\r\n                      })}>Log in</button>\r\n                    : <LogoutButton />}\r\n                </div>\r\n            </div>\r\n            <div className='userboard'>\r\n                {isAuthenticated && <img className='dropdown-pic' src={user.picture} alt= {`Avatar of ${user.name}`} />}\r\n                {!isAuthenticated ? <button onClick={() => loginWithRedirect({\r\n                        redirect_uri: window.location.origin + '/casting_agency'\r\n                      })}>Log in</button>\r\n                : <LogoutButton />}\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Nav","import { Link } from 'react-router-dom'\r\n\r\nexport default function NoMatch () {\r\n  return (\r\n    <div className='no-match'>\r\n      <h1>404</h1>\r\n      <p>Page Not found.</p>\r\n      <Link to='/'>HOME</Link>\r\n    </div>\r\n  )\r\n}","function Home () {\r\n    return (\r\n        <section>\r\n            <h1>Casting Agency</h1>\r\n            <div className='home-paragraph'>\r\n                <p>\r\n                    This is just a simple sample frontend. Because I have NO IDEA or any motivation\r\n                    to know anything about what goes on in this types of jobs \r\n                    (casting agencies), the frontend is looking the way it does. \r\n                    But I got it made anyways.\r\n                    <br />\r\n                    <br />\r\n                    Main focus is backend and thats it. I just wanted to connect\r\n                    frontend made with React to Python \r\n                    backend with authorization functionality :)\r\n                </p>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Home","import { useState, useEffect } from 'react';\r\nimport { useAuth0 } from '@auth0/auth0-react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst formatDate = (date) => {\r\n    const days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday',\r\n        'Thursday', 'Friday', 'Saturday']\r\n\r\n    const months = [\r\n        'January', 'February', 'March', 'April', 'May', 'June', 'July',\r\n        'August', 'September', 'October', 'November', 'December'\r\n        ]\r\n    const releaseDate = new Date(date);\r\n    const weekDay = days[releaseDate.getDay()];\r\n    const monthDay = releaseDate.getDate();\r\n    const month = months[releaseDate.getMonth()];\r\n    const year = releaseDate.getFullYear();\r\n\r\n\r\n    return `${weekDay} ${monthDay} ${month} ${year}`\r\n}\r\n\r\nfunction Movies () {\r\n    const { getAccessTokenSilently } = useAuth0();\r\n    const [data, setData] = useState(null);\r\n    const [token, setToken] = useState(null);\r\n    const [deleted, setDeleted] = useState(null);\r\n    const [page, setPage] = useState(1);\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            try {\r\n                const token = await getAccessTokenSilently({\r\n                    audience: 'casting_agency'\r\n                });\r\n                setToken(token)\r\n\r\n                const res = await fetch('/movies?page=' + page, {\r\n                    headers: {\r\n                        Authorization:`Bearer ${token}`\r\n                    }\r\n                });\r\n                const resData = await res.json()\r\n                setData(resData)\r\n                console.log(resData)\r\n            }catch(e) {\r\n                console.log(e)\r\n            }\r\n        })();\r\n    }, [getAccessTokenSilently, deleted, page])\r\n\r\n    const deleteMovie = async (id) => {\r\n        try {\r\n            const res = await fetch('/movies/' + id, {\r\n                method: 'DELETE',\r\n                headers: {\r\n                    Authorization:`Bearer ${token}`\r\n                }\r\n            });\r\n            const resData = await res.json()\r\n            setDeleted(resData)\r\n        }catch(e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n    const selectPage = (num) => {\r\n        setPage(num);\r\n    }\r\n\r\n    const createPagination = () => {\r\n        let pageNumbers = [];\r\n        let maxPage = Math.ceil(data.length / 3)\r\n        for (let i = 1; i <= maxPage; i++) {\r\n          pageNumbers.push(\r\n            <span\r\n              key={i}\r\n              className={`page-num ${i === page ? 'active' : ''}`}\r\n              onClick={() => {selectPage(i)}}>{i}\r\n            </span>)\r\n        }\r\n        return pageNumbers;\r\n      }\r\n    \r\n    if(deleted) {\r\n        if(deleted.success) {\r\n            return (\r\n                <section>\r\n                    <h1>Deleted!</h1>\r\n                    <br />\r\n                    <button onClick={(e) => setDeleted(null)} className='update'>Back</button>\r\n                </section>\r\n            )\r\n        }else {\r\n            return (<section>\r\n                <h1>{deleted.error}</h1>\r\n                <h2>{deleted.message}</h2>\r\n                <button onClick={(e) => setDeleted(null)} className='update'>Back</button>\r\n            </section>)\r\n        }\r\n    }\r\n\r\n    if(!data) {\r\n        return <section>Loading ...</section>\r\n    }\r\n    if(data.error && data.error === 404) {\r\n        return (\r\n            <section>\r\n                <h1>There are no movies in the database</h1>\r\n                <p>Please add some or contact your producer.</p>\r\n                <Link to={{pathname: '/casting_agency/newmovie', query: {token: token}}}><button className=\"new\">Create new Movie</button></Link>\r\n            </section>\r\n        )\r\n    }\r\n    if(data.error) {\r\n        return (<section>\r\n            <h1>{data.error}</h1>\r\n            <h2>{data.message}</h2>\r\n        </section>)\r\n    }\r\n\r\n    return (\r\n        <section>\r\n            {data.movies.map(movie => (\r\n                <div key = {movie.id} className=\"movies\">\r\n                    <h3>{movie.title}</h3>\r\n                    <p>ID: <strong>{movie.id}</strong></p>\r\n                    <p>Release date: <strong>{formatDate(movie.release_date)}</strong></p>\r\n                    <Link to={{pathname: '/casting_agency/updatemovie/' + movie.id, query: {\r\n                            token: token,\r\n                            id: movie.id,\r\n                            title: movie.title,\r\n                            releaseDate: movie.release_date\r\n                        }}}><button className=\"update\">Update</button></Link>\r\n                    <button onClick={() => deleteMovie(movie.id)} className=\"delete\">Delete</button>\r\n                </div>\r\n            ))}\r\n            <div className=\"pagination-menu\">\r\n                {createPagination()}\r\n            </div>\r\n            <Link to={{pathname: '/casting_agency/newmovie', query: {token: token}}}><button className=\"new\">Create new Movie</button></Link>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Movies","import { useState, useEffect } from 'react';\r\nimport { useAuth0 } from '@auth0/auth0-react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nfunction Actors () {\r\n    const { getAccessTokenSilently } = useAuth0();\r\n    const [data, setData] = useState(null);\r\n    const [token, setToken] = useState(null);\r\n    const [deleted, setDeleted] = useState(null);\r\n    const [page, setPage] = useState(1);\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            try {\r\n                const token = await getAccessTokenSilently({\r\n                    audience: 'casting_agency'\r\n                });\r\n                setToken(token)\r\n\r\n                const res = await fetch('/actors?page=' + page, {\r\n                    headers: {\r\n                        Authorization:`Bearer ${token}`\r\n                    }\r\n                });\r\n                const resData = await res.json()\r\n                setData(resData)\r\n            }catch(e) {\r\n                console.log(e)\r\n            }\r\n        })();\r\n    }, [getAccessTokenSilently, deleted])\r\n\r\n    const deleteActor = async (id) => {\r\n        try {\r\n            const res = await fetch('/actors/' + id, {\r\n                method: 'DELETE',\r\n                headers: {\r\n                    Authorization:`Bearer ${token}`\r\n                }\r\n            });\r\n            const resData = await res.json()\r\n            setDeleted(resData)\r\n        }catch(e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n    const selectPage = (num) => {\r\n        setPage(num);\r\n    }\r\n\r\n    const createPagination = () => {\r\n        let pageNumbers = [];\r\n        let maxPage = Math.ceil(data.length / 3)\r\n        for (let i = 1; i <= maxPage; i++) {\r\n          pageNumbers.push(\r\n            <span\r\n              key={i}\r\n              className={`page-num ${i === page ? 'active' : ''}`}\r\n              onClick={() => {selectPage(i)}}>{i}\r\n            </span>)\r\n        }\r\n        return pageNumbers;\r\n      }\r\n\r\n    if(deleted) {\r\n        if(deleted.success) {\r\n            return (\r\n                <section>\r\n                    <h1>Deleted!</h1>\r\n                    <br />\r\n                    <button onClick={(e) => setDeleted(null)} className='update'>Back</button>\r\n                </section>\r\n            )\r\n        }else {\r\n            return (<section>\r\n                <h1>{deleted.error}</h1>\r\n                <h2>{deleted.message}</h2>\r\n                <button onClick={(e) => setDeleted(null)} className='update'>Back</button>\r\n            </section>)\r\n        }\r\n    }\r\n\r\n    if(!data) {\r\n        return <section>Loading ...</section>\r\n    }\r\n    if(data.error && data.error === 404) {\r\n        return (\r\n            <section>\r\n                <h1>There are no actors in the database</h1>\r\n                <p>Please add some or contact your producer.</p>\r\n                <Link to={{pathname: '/casting_agency/newactor', query: {token: token}}}><button className=\"new\">Create new Actor</button></Link>\r\n            </section>\r\n        )\r\n    }\r\n    if(data.error) {\r\n        return (\r\n        <section>\r\n            <h1>{data.error}</h1>\r\n            <h2>{data.message}</h2>\r\n        </section>)\r\n    }\r\n    return (\r\n        <section>\r\n            {data.actors.map(actor => (\r\n                <div key = {actor.id} className=\"movies\">\r\n                    <h3>{actor.name}</h3>\r\n                    <p>ID: <strong>{actor.id}</strong></p>\r\n                    <p>Age: <strong>{actor.age}</strong></p>\r\n                    <p>Gender: <strong>{actor.gender}</strong></p>\r\n                    <Link to={{pathname: '/casting_agency/updateactor/' + actor.id, query: {\r\n                            token: token,\r\n                            id: actor.id,\r\n                            name: actor.name,\r\n                            age: actor.age,\r\n                            gender: actor.gender\r\n                        }}}><button className=\"update\">Update</button></Link>\r\n                    <button onClick={() => deleteActor(actor.id)} className=\"delete\">Delete</button>\r\n                </div>\r\n            ))}\r\n            <div className=\"pagination-menu\">\r\n                {createPagination()}\r\n            </div>\r\n            <Link to={{pathname: '/casting_agency/newactor', query: {token: token}}}><button className=\"new\">Create new Actor</button></Link>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Actors","import { useState } from \"react\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction NewMovie (props) {\r\n    const [title, setTitle] = useState(null);\r\n    const [releaseDate, setReleaseDate] = useState(null);\r\n    const [data, setData] = useState(null)\r\n\r\n    const onChangeTitle = e => {\r\n        e.preventDefault();\r\n        setTitle(e.target.value);\r\n    }\r\n    const onChangeDate = e => {\r\n        e.preventDefault();\r\n        setReleaseDate(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const token = props.location.query.token\r\n        \r\n        try {\r\n            const res = await fetch('/movies', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'content-Type': 'application/json',\r\n                    Authorization: `Bearer ${token}`\r\n                },\r\n                body: JSON.stringify({\r\n                    \"title\": title,\r\n                    \"release_date\": releaseDate\r\n                })\r\n            });\r\n            const resData = await res.json()\r\n            setData(resData)\r\n        }catch(e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n    if(data) {\r\n        if(data.success) {\r\n            return (\r\n                <section className='form-new'>\r\n                    <h2>Created!</h2>\r\n                    <p>{data.new_movie.title} was created.</p>\r\n                    <p>Relese date on: {data.new_movie.release_date}</p>\r\n                    <Link to='/casting_agency/movies'><button>Back to movies</button></Link>\r\n                </section>\r\n            )\r\n        }else {\r\n            return(\r\n                <section className='form-new'>\r\n                    <h2>{data.error}</h2>\r\n                    <p>{data.message}</p>\r\n                    <Link to='/casting_agency/movies'><button>Back to movies</button></Link>\r\n                </section>\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <section className='form-new'>\r\n            <h2>Create new Movie</h2>\r\n            <form onSubmit= {e => handleSubmit(e)}>\r\n            <label htmlFor='title'>Title:</label>\r\n            <input onChange={e => onChangeTitle(e)} id='title' type='text' placeholder='Title' />\r\n            <label htmlFor='releaseDate'>Release Date:</label>\r\n            <input onChange={e => onChangeDate(e)} id='releaseDate' type='date' placeholder='Release Date' />\r\n            <button disabled={!title || !releaseDate}>CREATE</button>\r\n        </form>\r\n      </section>\r\n    )\r\n}\r\nexport default NewMovie","import { useState } from \"react\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction NewActor (props) {\r\n    const [name, setName] = useState(null);\r\n    const [age, setAge] = useState(null);\r\n    const [gender, setGender] = useState(null)\r\n    const [data, setData] = useState(null)\r\n\r\n    const onChangeName = e => {\r\n        e.preventDefault();\r\n        setName(e.target.value);\r\n    }\r\n    const onChangeAge = e => {\r\n        e.preventDefault();\r\n        setAge(e.target.value)\r\n    }\r\n    const onChangeGender = e => {\r\n        e.preventDefault();\r\n        setGender(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const token = props.location.query.token\r\n        \r\n        try {\r\n            const res = await fetch('/actors', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'content-Type': 'application/json',\r\n                    Authorization: `Bearer ${token}`\r\n                },\r\n                body: JSON.stringify({\r\n                    \"name\": name,\r\n                    \"age\": age,\r\n                    \"gender\": gender\r\n                })\r\n            });\r\n            const resData = await res.json()\r\n            setData(resData)\r\n        }catch(e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n    if(data) {\r\n        if(data.success) {\r\n            return (\r\n                <section className='form-new'>\r\n                    <h2>Created!</h2>\r\n                    <p>{data.new_actor.name} was created.</p>\r\n                    <p>Age: {data.new_actor.age}, Gender: {data.new_actor.gender}</p>\r\n                    <Link to='/casting_agency/actors'><button>Back to Actors</button></Link>\r\n                </section>\r\n            )\r\n        }else {\r\n            return(\r\n                <section className='form-new'>\r\n                    <h2>{data.error}</h2>\r\n                    <p>{data.message}</p>\r\n                    <Link to='/casting_agency/actors'><button>Back to actors</button></Link>\r\n                </section>\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <section className='form-new'>\r\n            <h2>List a new Actor</h2>\r\n            <form onSubmit= {e => handleSubmit(e)}>\r\n            <label htmlFor='name'>Name:</label>\r\n            <input onChange={e => onChangeName(e)} id='name' type='text' placeholder='Full Name' />\r\n            <label htmlFor='age'>Age:</label>\r\n            <input onChange={e => onChangeAge(e)} id='age' type='text' placeholder='Age' />\r\n            <label htmlFor='gender'>Gender:</label>\r\n            <input onChange={e => onChangeGender(e)} id='gender' type='text' placeholder='Gender' />\r\n            <button disabled={!name || !age || !gender}>CREATE</button>\r\n        </form>\r\n      </section>\r\n    )\r\n}\r\nexport default NewActor","import { useState } from \"react\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction UpdateActor (props) {\r\n    const [name, setName] = useState(props.location.query.name);\r\n    const [age, setAge] = useState(props.location.query.age);\r\n    const [gender, setGender] = useState(props.location.query.gender)\r\n    const [data, setData] = useState(null)\r\n\r\n    const onChangeName = e => {\r\n        e.preventDefault();\r\n        setName(e.target.value);\r\n    }\r\n    const onChangeAge = e => {\r\n        e.preventDefault();\r\n        setAge(e.target.value)\r\n    }\r\n    const onChangeGender = e => {\r\n        e.preventDefault();\r\n        setGender(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = async (e, id) => {\r\n        e.preventDefault();\r\n        const token = props.location.query.token\r\n        \r\n        try {\r\n            const res = await fetch('/actors/' + id, {\r\n                method: 'PATCH',\r\n                headers: {\r\n                    'content-Type': 'application/json',\r\n                    Authorization: `Bearer ${token}`\r\n                },\r\n                body: JSON.stringify({\r\n                    \"name\": name !== props.location.query.name ? name : null,\r\n                    \"age\": age !== props.location.query.age ? age : null,\r\n                    \"gender\": gender !== props.location.query.gender ? gender : null\r\n                })\r\n            });\r\n            const resData = await res.json()\r\n            setData(resData)\r\n        }catch(e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n    if(data) {\r\n        if(data.success) {\r\n            return (\r\n                <section className='form-new'>\r\n                    <h2>Updated!</h2>\r\n                    <p>{data.updated_actor.name} was updated.</p>\r\n                    <p>Age: {data.updated_actor.age}, Gender: {data.updated_actor.gender}</p>\r\n                    <Link to='/casting_agency/actors'><button>Back to Actors</button></Link>\r\n                </section>\r\n            )\r\n        }else {\r\n            return(\r\n                <section className='form-new'>\r\n                    <h2>{data.error}</h2>\r\n                    <p>{data.message}</p>\r\n                    <Link to='/casting_agency/actors'><button>Back to actors</button></Link>\r\n                </section>\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <section className='form-new'>\r\n            <h2>Update Actor</h2>\r\n            <form onSubmit= {e => handleSubmit(e, props.location.query.id)}>\r\n            <label htmlFor='name'>Name:</label>\r\n            <input onChange={e => onChangeName(e)} id='name' type='text' value={name} placeholder='Full Name' />\r\n            <label htmlFor='age'>Age:</label>\r\n            <input onChange={e => onChangeAge(e)} id='age' type='text' value={age} placeholder='Age' />\r\n            <label htmlFor='gender'>Gender:</label>\r\n            <input onChange={e => onChangeGender(e)} id='gender' type='text' value={gender} placeholder='Gender' />\r\n            <button disabled={!name || !age || !gender}>UPDATE</button>\r\n        </form>\r\n      </section>\r\n    )\r\n}\r\nexport default UpdateActor","import { useState } from \"react\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction UpdateMovie (props) {\r\n    const [title, setTitle] = useState(props.location.query.title);\r\n    const [releaseDate, setReleaseDate] = useState(props.location.query.releaseDate);\r\n    const [data, setData] = useState(null)\r\n\r\n    const onChangeTitle = e => {\r\n        e.preventDefault();\r\n        setTitle(e.target.value);\r\n    }\r\n    const onChangeDate = e => {\r\n        e.preventDefault();\r\n        setReleaseDate(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = async (e, id) => {\r\n        e.preventDefault();\r\n        const token = props.location.query.token\r\n        \r\n        try {\r\n            const res = await fetch('/movies/' + id, {\r\n                method: 'PATCH',\r\n                headers: {\r\n                    'content-Type': 'application/json',\r\n                    Authorization: `Bearer ${token}`\r\n                },\r\n                body: JSON.stringify({\r\n                    \"title\": title !== props.location.query.title ? title : null,\r\n                    \"release_date\": releaseDate !== props.location.query.releaseDate ? releaseDate : null,\r\n                })\r\n            });\r\n            const resData = await res.json()\r\n            setData(resData)\r\n        }catch(e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n    if(data) {\r\n        if(data.success) {\r\n            return (\r\n                <section className='form-new'>\r\n                    <h2>Updated!</h2>\r\n                    <p>{data.updated_movie.title} was updated.</p>\r\n                    <p>Relese date on: {data.updated_movie.release_date}</p>\r\n                    <Link to='/casting_agency/movies'><button>Back to Movies</button></Link>\r\n                </section>\r\n            )\r\n        }else {\r\n            return(\r\n                <section className='form-new'>\r\n                    <h2>{data.error}</h2>\r\n                    <p>{data.message}</p>\r\n                    <Link to='/casting_agency/movies'><button>Back to Movies</button></Link>\r\n                </section>\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <section className='form-new'>\r\n            <h2>Update Movie</h2>\r\n            <form onSubmit= {e => handleSubmit(e, props.location.query.id)}>\r\n            <label htmlFor='title'>Title:</label>\r\n            <input onChange={e => onChangeTitle(e)} id='title' value={title} type='text' placeholder='Title' />\r\n            <label htmlFor='releaseDate'>Release Date:</label>\r\n            <input onChange={e => onChangeDate(e)} id='releaseDate' value={releaseDate} type='date' placeholder='Release Date' />\r\n            <button disabled={!title || !releaseDate}>UPDATE</button>\r\n        </form>\r\n      </section>\r\n    )\r\n}\r\nexport default UpdateMovie","import { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport { useAuth0 } from \"@auth0/auth0-react\";\n\nimport logo from './logo.svg';\nimport './App.css';\nimport './styles/nav.scss';\nimport './styles/home.scss';\nimport Nav from './components/Nav';\nimport NoMatch from './components/NoMatch';\nimport Home from './components/Home';\nimport Movies from './components/Movies';\nimport Actors from './components/Actors';\nimport NewMovie from './components/NewMovie'\nimport NewActor from './components/NewActor';\nimport UpdateActor from './components/UpdateActor';\nimport UpdateMovie from './components/UpdateMovie';\n\nfunction App() {\n  const { isLoading } = useAuth0();\n  \n  if(isLoading) {\n    return <section>Loading ...</section>;\n  }\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Nav />\n        <Switch>\n            <Route path='/casting_agency' exact component={Home} />\n            <Route path='/casting_agency/movies' exact component={Movies} />\n            <Route path='/casting_agency/actors' component={Actors} />\n            <Route path='/casting_agency/newmovie' component={NewMovie} />\n            <Route path='/casting_agency/newactor' component={NewActor} />\n            <Route path='/casting_agency/updateactor/:id' component={UpdateActor} />\n            <Route path='/casting_agency/updatemovie/:id' component={UpdateMovie} />\n            <Route component={NoMatch} />\n          </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Auth0Provider } from '@auth0/auth0-react'\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Auth0Provider\n    domain=\"dev-bfn-8r1t.eu.auth0.com\"\n    clientId=\"5tHDsFBmk1BCUrvSvJS4DAmHYLoych1E\"\n    redirectUri={window.location.origin}\n    audience=\"casting_agency\"\n  >\n    <App />\n  </Auth0Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}